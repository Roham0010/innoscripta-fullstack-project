version: '3.7'
services:

  frontend:
    build:
      context: ./frontend
    environment:
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    stdin_open: true
    ports:
      - 3000:3000
    networks:
      - app-network

  backend:
    build:
      context: ./backend/
    restart: unless-stopped
    environment:
      DB_HOST: appdb
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    working_dir: /var/www
    depends_on:
      - appdb
    volumes:
      - ./backend:/var/www
    ports:
      - "8080:8000"
    networks:
      - app-network
      - db

  appdb:
    image: mysql:8.2.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    networks:
      - db

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: appdb
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - appdb
    ports:
      - 8443:80
    networks:
      - db

networks:
  app-network:
    driver: bridge
  db:
